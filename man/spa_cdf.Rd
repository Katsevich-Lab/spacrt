% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/method_helpers.R
\name{spa_cdf}
\alias{spa_cdf}
\title{\code{spa_cdf} SPA to CDF of T_n = S_n / sqrt(n)}
\usage{
spa_cdf(X, Y, X_on_Z_fit_vals, Y_on_Z_fit_vals, fam, R = 5)
}
\arguments{
\item{X}{Numeric vector of length n for the predictor variable.}

\item{Y}{Numeric vector of length n for the response variable.}

\item{X_on_Z_fit_vals}{X_on_Z_fit$fitted.values}

\item{Y_on_Z_fit_vals}{Y_on_Z_fit$fitted.values}

\item{fam}{The GLM family which includes the distribution whose CGF is being
evaluated (values can be \code{gaussian}, \code{binomial}, \code{poisson}, etc).}

\item{R}{stats::uniroot() search space endpoint
should be broadened.}
}
\value{
\code{test statistic}, \code{left-sided p-value}, \code{right-sided p-value},
\code{both-sided p-value}, and \code{spa.success} which specifies whether the saddlepoint
equation could be solved. If not, a backup method (GCM) had to be employed as a backup.
}
\description{
\code{spa_cdf} SPA to CDF of T_n = S_n / sqrt(n)
}
\examples{
n <- 100; p <- 2; normalize <- FALSE; return_cdf <- FALSE
data <- list(X = rbinom(n = n, size = 1, prob = 0.2),
             Y = rpois(n = n, lambda = 1),
             Z = matrix(rnorm(n = n*p, mean = 0, sd = 1), nrow = n, ncol = p))
X <- data$X; Y <- data$Y; Z <- data$Z
X_on_Z_fit <- suppressWarnings(stats::glm(X ~ Z, family = "binomial"))
Y_on_Z_fit <- suppressWarnings(stats::glm(Y ~ Z, family = "poisson"))
spacrt:::spa_cdf(X = X, Y = Y,
                 X_on_Z_fit_vals = X_on_Z_fit$fitted.values,
                 Y_on_Z_fit_vals = Y_on_Z_fit$fitted.values,
                 fam = "binomial", R = 100)

}
\keyword{internal}
